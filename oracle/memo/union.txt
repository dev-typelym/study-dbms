비동등 조인(NON EQUI JOIN)
		SELECT e.first_name, s.grade 
		FROM employees e, salgrade s
		where e.salary between s.lowsalary and s.highsalary;

외부조인(OUTER JOIN)
		반드시 일치하지 않아도 결과를 가져온다.
		
		1. 데이터가 부족한 쪽에 (+)를 기술한다.
		2. 전체를 보고 싶은 쪽은(+) 반대쪽
		3. (+)가 붙지 않은쪽이 조인 이름이된다
		   (전체를 보고있는 쪽이 조인 이름)

내부조인(self - join)
		반드시 별칭을 설정해야한다.
		두개의 테이블을 다른 테이블이라고 생각하면 편하다.

서브쿼리
		SQL문 안에 포함되어있는 SQL문
		서브쿼리는 SELECT문 안에서
		SELECT절, FROM절, WHERE절, HAVING절, ORDER BY절 에서 사용이 가능하다.
		서브쿼리는 반드시 ()로 감싸야한다.

실행결과에 따른 분류
		단일 행 서브쿼리
			서브쿼리 실행 결과가 행이 하나인 경우
			단일행 연산자와 함께 사용한다(< >> <= >= <> =)
		다중 행 서브쿼리
			서브쿼리 실행 결과가 행이 여러개인 경우
			다중행 연산자와 함께 사용
			(IN, ANY, ALL, EXISTS, NOT EXISTS)
			EXISTS는 메인쿼리부터 차례로 해석
			EXISTS의 서브쿼리의 SELECT절은 해석하지 않는다.
		다중 컬럼 서브쿼리
			여러개의 열과 여러개의 행으로 결과가 나오는 서브쿼리
			SQL SERVER에서 지원하지 않음

집합 연산자 
		UNION 		: 합집합(중복제거)
		UNION ALL		: 합집합(중복포함)
		INTERSECT		: 교집합
		MINUS		: 차집합
		
계층형 쿼리
		계층형 데이터를 조회하기 위해 사용하는 쿼리

계층형 데이터
		계층정보가 들어있는 데이터 

외래키
		FOREIGN KEY 
		테이블을 연결시키는 컬럼
		외래키를 제공하는 테이블(부모)
		외래키를 제공받는 테이블(자식)
		자식은 부모에 존재하는 값만 추가가 될 수 있다.
		
루트노드
		최상위 데이터
리프노드
		자식이 없는 노드
형제노드
		동일한 레벨에 존재하는 노드
데이터전개
		데이터를 찾아간다.















